/*
Services API

Azion Services

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package edgeservices

import (
	"encoding/json"
)

// ResourceResponse struct for ResourceResponse
type ResourceResponse struct {
	ContentType string `json:"content_type"`
	Id int64 `json:"id"`
	LastEditor string `json:"last_editor"`
	Name string `json:"name"`
	Type string `json:"type"`
	UpdatedAt string `json:"updated_at"`
}

// NewResourceResponse instantiates a new ResourceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceResponse(contentType string, id int64, lastEditor string, name string, type_ string, updatedAt string) *ResourceResponse {
	this := ResourceResponse{}
	this.ContentType = contentType
	this.Id = id
	this.LastEditor = lastEditor
	this.Name = name
	this.Type = type_
	this.UpdatedAt = updatedAt
	return &this
}

// NewResourceResponseWithDefaults instantiates a new ResourceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceResponseWithDefaults() *ResourceResponse {
	this := ResourceResponse{}
	return &this
}

// GetContentType returns the ContentType field value
func (o *ResourceResponse) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *ResourceResponse) GetContentTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *ResourceResponse) SetContentType(v string) {
	o.ContentType = v
}

// GetId returns the Id field value
func (o *ResourceResponse) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResourceResponse) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResourceResponse) SetId(v int64) {
	o.Id = v
}

// GetLastEditor returns the LastEditor field value
func (o *ResourceResponse) GetLastEditor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastEditor
}

// GetLastEditorOk returns a tuple with the LastEditor field value
// and a boolean to check if the value has been set.
func (o *ResourceResponse) GetLastEditorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastEditor, true
}

// SetLastEditor sets field value
func (o *ResourceResponse) SetLastEditor(v string) {
	o.LastEditor = v
}

// GetName returns the Name field value
func (o *ResourceResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceResponse) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceResponse) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *ResourceResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ResourceResponse) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ResourceResponse) SetType(v string) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ResourceResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ResourceResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ResourceResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o ResourceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["content_type"] = o.ContentType
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["last_editor"] = o.LastEditor
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableResourceResponse struct {
	value *ResourceResponse
	isSet bool
}

func (v NullableResourceResponse) Get() *ResourceResponse {
	return v.value
}

func (v *NullableResourceResponse) Set(val *ResourceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceResponse(val *ResourceResponse) *NullableResourceResponse {
	return &NullableResourceResponse{value: val, isSet: true}
}

func (v NullableResourceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


