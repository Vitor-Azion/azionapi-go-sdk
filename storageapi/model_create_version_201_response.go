/*
Edge Application Statics API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storageapi

import (
	"encoding/json"
)

// checks if the CreateVersion201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVersion201Response{}

// CreateVersion201Response struct for CreateVersion201Response
type CreateVersion201Response struct {
	// the generated version
	VersionId *string `json:"version_id,omitempty"`
}

// NewCreateVersion201Response instantiates a new CreateVersion201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVersion201Response() *CreateVersion201Response {
	this := CreateVersion201Response{}
	return &this
}

// NewCreateVersion201ResponseWithDefaults instantiates a new CreateVersion201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVersion201ResponseWithDefaults() *CreateVersion201Response {
	this := CreateVersion201Response{}
	return &this
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *CreateVersion201Response) GetVersionId() string {
	if o == nil || isNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVersion201Response) GetVersionIdOk() (*string, bool) {
	if o == nil || isNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *CreateVersion201Response) HasVersionId() bool {
	if o != nil && !isNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *CreateVersion201Response) SetVersionId(v string) {
	o.VersionId = &v
}

func (o CreateVersion201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVersion201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.VersionId) {
		toSerialize["version_id"] = o.VersionId
	}
	return toSerialize, nil
}

type NullableCreateVersion201Response struct {
	value *CreateVersion201Response
	isSet bool
}

func (v NullableCreateVersion201Response) Get() *CreateVersion201Response {
	return v.value
}

func (v *NullableCreateVersion201Response) Set(val *CreateVersion201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVersion201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVersion201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVersion201Response(val *CreateVersion201Response) *NullableCreateVersion201Response {
	return &NullableCreateVersion201Response{value: val, isSet: true}
}

func (v NullableCreateVersion201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVersion201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


